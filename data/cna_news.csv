Machine learning has uncertainty. Design for it.
"<hl>We can productize and ship more data science insights — even imperfect, probabilistic ones — with the right designs."
"That means fewer and fewer of the products we build deal in facts as we know them: instead, they rely more and more on probabilistic things like inferences, predictions, and recommendations."
"<hl>After all, you’d probably rather know there is a 50% chance of rain than have no forecast at all."
How can we unlock user value from algorithms that are bound to be wrong?
We can do what forecasts do: design our products to be upfront about uncertainty.
"In the age of machine learning, designing products that communicate their degree of certainty can be a huge competitive advantage:"
"<hl>We can productize and ship more data science insights—even imperfect, probabilistic ones — by empowering users to make their own judgments about how to use them, rather than deciding for them and shipping nothing."
"<hl>We can productize and ship more data science insights—even imperfect, probabilistic ones — by empowering users to make their own judgments about how to use them, rather than deciding for them and shipping nothing."
"Communicating uncertainty is a disclaimer: users can weigh evidence and draw conclusions at their own risk, instead of having to take a product’s claims at face value and holding it responsible for opaque, incorrect conclusions."
"Communicating uncertainty is a disclaimer: users can weigh evidence and draw conclusions at their own risk, instead of having to take a product’s claims at face value and holding it responsible for opaque, incorrect conclusions."
Good design lets users see what a product is doing: visibility of system status is the first Nielsen Norman heuristic for user interface design.
Visibility of uncertainty saves users the pain of figuring out for themselves how reliable something is.
"Machine learning expresses uncertainty in probabilities, but probabilities aren’t products: normal people don’t want to pore over p-values and confidence intervals, and designers don’t want to create complicated monstrosities riddled with asterisks and technicalities."
"Besides, non-experts are not very good at interpreting raw probabilities, sometimes turning them into terrible strategic decisions."
"We should communicate uncertainty in our products, but we need effective, user-centric design solutions to do it."
"<hl>In this article, I’ll describe three design patterns that do it well:"
"<hl>To make things concrete, I’ll mainly draw examples from Context, our legal data analytics product that extracts useful insights from the language of millions of judicial opinions."
"It’s a great proving ground for productizing machine learning, since our attorney user base can be highly skeptical of probability and totally unforgiving of error."
We’ve learned a lot in designing a product that works for them!
"The formula here is simple: provide your probabilistic insight (The airport is a little busy right now…), and let users know how your algorithm arrived at it (…based on visits to this place)."
